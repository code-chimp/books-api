// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FORMAT {
  HARDCOVER
  PAPERBACK
  EBOOK
}

enum ROLE {
  USER
  ADMIN
}

enum CURRENCY {
  CAD
  EUR
  GBP
  USD
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  role      ROLE     @default(USER)
  active    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Book {
  id          String @id @default(uuid())
  title       String @db.VarChar(150)
  description String @db.VarChar(2500)

  publisherId String
  publisher   Publisher    @relation(fields: [publisherId], references: [id])
  authors     BookAuthor[]
  formats     BookFormat[]
}

model BookFormat {
  id        String   @id @default(uuid())
  format    FORMAT   @default(PAPERBACK)
  srp       Float
  currency  CURRENCY @default(USD)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookId String
  book   Book   @relation(fields: [bookId], references: [id])
}

model Author {
  id        String   @id @default(uuid())
  firstName String   @db.VarChar(150)
  lastName  String   @db.VarChar(150)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books BookAuthor[]
}

model BookAuthor {
  bookId    String
  book      Book     @relation(fields: [bookId], references: [id])
  authorId  String
  author    Author   @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([bookId, authorId])
}

model Publisher {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(150)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books Book[]
}
